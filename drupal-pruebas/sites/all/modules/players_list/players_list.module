<?php
// $Id$

/**
 * @file
 * Muestra una lista de todos los judadores de un equipo
*/

/**
 * Acceso a la base de datos
 */

/**
 * Hook_menu
 */

function players_list_menu() {
  $items = array();
  $items['admin/config/development/list'] = array(
    'title' => 'List players',
    'description' => 'List players of my team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('players_table_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/development/add-player'] = array(
    'title' => 'Add Player',
    'description' => 'Add a player a your team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('add_players'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


function players_list_select() {
  global $conf;
  global $user;
  $name = $conf['name'];
  $sid_user = get_sid_user($user->uid);

  $query = db_select('users', 'n')
    ->fields('n', array('name', 'mail', 'uid'))
    ->condition('sid', $sid_user)
    ->orderBy('name', 'DESC')
    ->addTag('node_access')
    ->execute();

  return $query;
}

function players_table_form($form, &$form_state) {

  $result = players_list_select();
  $i = 0;
  foreach ($result as $node) {
    $form['all']['lock_'.$i] = array(
        '#type' => 'button',
        '#value' => t('Locked'),
        '#name' => 'lock_'.$i,
        '#ajax' => array(
          'callback' => 'replace_prueba',
          'wrapper' => 'prueba',
        ),
    );
    $form['all']['delete_'.$i] = array(
        '#type' => 'button',
        '#value' => t('Delete'),
        '#name' => 'delete_'.$i,
        '#ajax' => array(
          'callback' => 'replace_prueba',
          'wrapper' => 'prueba',
        ),
    );
  $i++;
  }
  $form['all']['#theme'] = 'ea_options_theme';
  $form['replace_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t("The default value will be changed"),
    '#description' => t("Say something about why you chose") . "'" .
      (!empty($form_state['values']['changethis'])
      ? $form_state['values']['changethis'] : t("Not changed yet")) . "'",
    '#prefix' => '<div id="prueba">',
    '#suffix' => '</div>',
    );

  return $form;
}

function add_players($form, &$form_state) {
  $form['email'] = array(
    '#title' => t('Email'),
    '#type' => 'textfield',
    '#size' => 60, 
    '#maxlength' => 150, 
    '#required' => TRUE,
    '#description' => t('Add a email to send to player of team'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
    '#name' => 'submit',
    '#submit' => array('add_players_submit'),
  );
  return $form;
}

/*function players_list_mail($key, &$message, $params) {
  if (isset($params['subject'])) {
    $message['subject'] = $params['subject'];
  } 
  if (isset($params['body'])) {
    $message['body'][] = $params['body']; 
  }
  if (isset($params['headers']) && is_array($params['headers'])) {   
    $message['headers'] += $params['headers'];
  }
}*/

function add_players_submit($form,&$form_state) {
  global $user;  // place at the top of the function you are calling from
  // ... other function code would be here
  $email = $form_state['values']['email'];
  $sid_admin = get_sid_user($user->uid);
  // Send email with $body and $subject constructed here:
  $body = 'This is the email body text.';
  $to = $email;
  $from = 'no-reply@example.com';
  // If you are using suhosin (the hardened PHP extension) and want to use
  // Cc or Bcc, then make sure that suhosin.mail.protect is not set to 2, 
  // or the mail will be rejected as an attack.
  $header_bcc = 'bcc_address@example.com';
  $header_cc = 'cc_address@example.com';
  $subject = 'Subject of the email';
  // you can set 'message_key' to any key you want, and process 
  // that in the hook_mail as shown in the commented out code.
  // Or, just set it to some string and ignore it as we are here.
  // You can add extra headers into the headers array here.  If you
  // are trying to send an HTML formatted email, please use either
  // the MIME Mail or HTMLMail modules, rather than doing it
  // by just setting the Content-Type.
  $message = drupal_mail('mymodule', 'message_key', $to, user_preferred_language($user), array('body' => $body, 'subject' => $subject, 'headers' => array('Cc' => $header_cc, 'Bcc' => $header_bcc), $from, TRUE));

  insert_transfers();

  // You can check $message['result'] to see if the message sent successfully.
  drupal_set_message(t('Send right'));
}

/* 
 * Theming form
 */

function theme_ea_options_theme($variables) {
  $form = $variables['form'];
  $header = array(
    array('data' => t('Player')),
    array('data' => t('Email')),
    array('data' => t('Locked')),
    array('data' => t('Delete')),
  );

  $result = players_list_select();
  $row = array();
  $i = 0;
  foreach ($result as $node) {
    $url = get_url_player($node->name);
    $row[] = array(
      array('data' => l( $node->name , $url , array('attributes' => array('class' => 'autor', 'target' => '_blank')))),
      array('data' => $node->mail),
      array('data' => drupal_render($form['lock_'.$i])),
      array('data' => drupal_render($form['delete_'.$i])),
    );
    $i++;
  }
  $output = theme('table',array('header'=>$header,'rows'=>$row));
  $output .= drupal_render_children($form);
  return $output;
}

function players_list_theme($existing, $type, $theme, $path){
    return array(
    'ea_options_theme' => array(
      //'variables' => array('form' => NULL),
      'render element' => 'form',
      //'callback' => 'theme_players_table_form',
    ),
    /*'players_list_item' => array(
      'variables' => array('node'=>NULL),
      'template' => 'players-list-item',
    ),*/
  );
}

function insert_transfers() {
  db_insert('transfers')
    ->fields(array('email' => $email ,'state' => 0, 'sid' => $sid_admin))
    ->execute();
}

function get_url_player($username) {
  global $base_root;
  $account = get_user_uid($username);
  $sid_user = get_sid_user($account);
  if($sid_user == 0){
    $sid_url = '';
  }else{
    $sid_url = $sid_user.'/';
  }
  return $base_root.'/'.$sid_url.'user/'.$account;
}

function get_user_uid($username)
{    
    // Function that returns the uid based on the username given
    $query = db_select('users', 'n')
    ->fields('n', array('uid'))
    ->condition('name', $username)
    ->addTag('node_access')
    ->execute();

    foreach ($query as $value) {
      return $value->uid;
    }
}

function replace_prueba() {
  return 'hola';
}