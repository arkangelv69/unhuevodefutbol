<?php
// $Id$

/**
 * @file
 * A module what to create a new number in the site.
*/
function unhuevodefutbol_help($path, $arg) {
  if ($path == 'admin/help#unhuevodefutbol') {
    return t('A module to create a new number in the site.');
  }
}

function unhuevodefutbol_menu() {
  $items = array();

  //spectator
  $items['user/search-team'] = array(
    'title' => 'Search team',
    'description' => 'you can look for a team on the sign',
    'page callback' => 'unhf_search_team',
    'page arguments' => array(1),
    'access arguments' => array('search to sign up'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'user-menu',
  );

  $items['user/create-team'] = array(
    'title' => 'Create team',
    'description' => 'create your own team',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unhf_create_team'),
    'access arguments' => array('create your own team'),
    'theme callback' => 'administrative_theme',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'user-menu',
    'context' => MENU_CONTEXT_INLINE,
    'file' => 'unhuevodefutbol.create_team.inc',
  );

  $items['user/deals'] = array(
    'title' => 'Deals',
    'description' => 'deals to sign up for a team',
    'page callback' => 'unhf_deals',
    'page arguments' => array(1),
    'access arguments' => array('view deals'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'user-menu',
  );

  //manager
  $items['node/%team'] = array(
    'title' => 'team',
    'description' => 'Here you can put the description and the history about your team',
    'access arguments' => array('edit setting team'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/leagues'] = array(
    'title' => 'leagues',
    'description' => 'leagues manage, You can add league and view them',
    'page callback' => 'unhf_teams_list',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/players'] = array(
    'title' => 'players',
    'description' => 'View list, add and delete players',
    'page callback' => 'unhf_players_team',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function unhuevodefutbol_permission() {
  return array(
    'edit setting team' => array(
      'title' => t('edit setting team'), 
      'description' => t('edit setting team.'),
    ),
    'search to sign up' => array(
      'title' => t('search to sign up'), 
      'description' => t('search to sign up.'),
    ),
    'create your own team' => array(
      'title' => t('create your own team'), 
      'description' => t('create your own team.'),
    ),
    'view deals' => array(
      'title' => t('view deals'), 
      'description' => t('view deals.'),
    ),
  );
}

function unhf_desciption_team($form, &$form_state) {
  /*// Number
  $form['bbdd_data'] = array(
    '#type' => 'fieldset',
    '#title' => t('Datos de conexión con la base de datos'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['bbdd_data']['new_form-bbdd'] = array(
    '#type' => 'textfield',
    '#title' => t('Nombre de la base de datos'),
    '#size' => 10,
    '#maxlength' => 20,
    '#description' => t('Por su seguridad indique a la base de datos que quiere conectar'),
    '#required' => TRUE,
    '#attributes' => array('autocomplete'=>'off'),
    '#group' => 'bbdd_data',
  );
  // Number
  $form['bbdd_data']['new_form-user'] = array(
    '#type' => 'textfield',
    '#title' => t('Nombre de usuario'),
    '#size' => 10,
    '#maxlength' => 20,
    '#description' => t('Por su seguridad indique el nombre de usuario de la base de datos'),
    '#required' => TRUE,
    '#attributes' => array('autocomplete'=>'off'),
    '#group' => 'bbdd_data',
  );
  // Number
  $form['bbdd_data']['new_form-pass'] = array(
    '#type' => 'textfield',
    '#title' => t('Contraseña de la base de datos'),
    '#size' => 10,
    '#maxlength' => 20,
    '#description' => t('Introduzca la password de la base de datos'),
    '#required' => TRUE,
    '#attributes' => array('autocomplete'=>'off'),
    '#group' => 'bbdd_data',
  );*/
  // Number
  $form['new_form-team'] = array(
    '#type' => 'textfield',
    '#title' => t('New team'),
    '#size' => 10,
    '#maxlength' => 4,
    '#description' => t('the name for the new team'),
    '#required' => TRUE,
  );
  // Submit button 
  $form['submit'] = array( 
    '#type' => 'submit', 
    '#value' => t('Create new number'), 
  );

  return $form;
}

function unhuevodefutbol_form_submit($form, &$form_state) {
  $number = $form_state['values']['new_form-number'];
  $bbdd = $form_state['values']['new_form-bbdd'];
  $user = $form_state['values']['new_form-user'];
  $pass = $form_state['values']['new_form-pass'];
  create_tables($number);
  //insert_data($number);
  create_directory($number);
  create_setting_file($number,$date,$year,$bbdd,$user,$pass);
}

/**
 *Create acount in de site
 */
function unhuevodefutbol_user_insert(&$edit, $account, $category){
  //When you create a new account in the site. This get the spectator rol
  $nid = db_insert('users_roles')
  ->fields(array(
    'uid' => $account->uid,
    'rid' => 5
  ))
  ->execute();
}

/**
 * Implements hook_admin_paths().
 */
function unhuevodefutbol_admin_paths() {
  $paths = array(
    'user/create-team' => TRUE,
    'user/search-team' => TRUE,
    'user/deals' => TRUE,
  );
  return $paths;
}

/**
 * General function
 */

function team_to_arg($arg) {
  return 13;
  global $user;
  if( is_admin_team() ) {
    $arg = get_nid_description_general_for_aid( $user->uid );
    return $arg;
  }else{
    return false;
  }
}

function is_admin_team() {

}

function is_player_team() {

}

function is_new_user_a_signing($mail) {
  // Function that returns the uid based on the username given
  $query = db_select('unhf_market', 'n')
  ->fields('n', array('mid'))
  ->condition('mail', $mail)
  ->addTag('node_access')
  ->execute();
  $count = $query->rowCount();

  //($count > 0) ? return true : return false;

}

function get_nid_description_general_for_aid() {

}

function get_url_absolute_player($username) {
  // get url absolute to the user account
  global $base_root;
  $account = get_user_uid($username);
  $sid_user = get_sid_user($account);
  if($sid_user == 0){
    $sid_url = '';
  }else{
    $sid_url = $sid_user.'/';
  }
  return $base_root.'/'.$sid_url.'user/'.$account;
}

function get_user_uid($username)
{    
  // Function that returns the uid based on the username given
  $query = db_select('users', 'n')
  ->fields('n', array('uid'))
  ->condition('name', $username)
  ->addTag('node_access')
  ->execute();
  $data = $query->fetchObject();

  return $data->uid;

}

function administrative_theme() {
  $admin_theme = variable_get('admin_theme', 0);
  return $admin_theme;
}